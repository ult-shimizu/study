- name: yumがupdate済であること
  yum:
    name: '*'
    state: latest
    update_cache: yes

- name: gitがインストール済であること
  yum:
    name: git
    state: present

- name: Selinuxは無効化されていること
  selinux: state=disabled

# Apache
- name: httpdがインストールされていること
  yum:
    name: httpd
    state: present

- name: Apacheが起動してenableになっていること
  service:
    name: httpd
    state: started
    enabled: yes

- name: Prefork MPMが有効になっていること
  lineinfile:
    path: /etc/httpd/conf.modules.d/00-mpm.conf
    state: present
    backrefs: yes
    regexp: '^#(LoadModule mpm_prefork_module.*)$'
    line: '\1'
  notify: restart httpd

- name: Worker MPMが無効になっていること
  lineinfile:
    path: /etc/httpd/conf.modules.d/00-mpm.conf
    state: present
    backrefs: yes
    regexp: '^(LoadModule mpm_worker_module.*)$'
    line: '#\1'
  notify: restart httpd

- name: Event MPMが無効になっていること
  lineinfile:
    path: /etc/httpd/conf.modules.d/00-mpm.conf
    state: present
    backrefs: yes
    regexp: '^(LoadModule mpm_event_module.*)$'
    line: '#\1'
  notify: restart httpd

- name: DocumentRootが設定されていること
  replace:
    dest: /etc/httpd/conf/httpd.conf
    regexp: DocumentRoot "/var/www/html"
    replace: DocumentRoot "{{ document_root }}"
  notify: restart httpd

- name: DocumentRootのディレクトリ設定がされていること
  replace:
    dest: /etc/httpd/conf/httpd.conf
    regexp: <Directory "/var/www/html">
    replace: <Directory "{{ document_root }}">
  notify: restart httpd

- name: .htaccessが有効になっていること
  replace:
    dest: /etc/httpd/conf/httpd.conf
    regexp: 'AllowOverride None'
    replace: 'AllowOverride All'
  notify: restart httpd

# PHP
- name: Remiリポジトリが存在すること
  yum:
    name: "http://rpms.famillecollet.com/enterprise/remi-release-7.rpm"
    state: present

- name: PHPとPHP関連モジュールがインストールされていること
  yum:
    enablerepo: "remi,remi-php71"
    name:
      - php
      - php-mysqlnd
      - php-mbstring
      - php-pdo
      - php-bcmath
      - php-xml
      - php-process
    state: present
  notify: restart httpd

# MySQL
- name: mariadb-libsは存在しないこと
  yum:
    name:
      - mariadb-libs
    state: removed

- name: mysql用リポジトリ追加
  yum:
    name: http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm
    state: present

- name: mysqlインストール
  yum:
    name: mysql-community-server
    state: present

- name: MySQLサービスが自動起動すること
  service:
    name: mysqld
    enabled: yes
    state: started

- name: データディレクトリが初期化済であること
  stat: path=/var/lib/mysql_initialized
  register: mysql_initialized_stat
  changed_when: not mysql_initialized_stat.stat.exists

# Mysql-pythonのインストールがうまくいかないため、mysqlの設定は手動で行うものとする

#  sudo cat /var/log/mysqld.log | grep 'password is generated'
#  set password for root@localhost=password('passwordPASSWORD@999');
#  SET GLOBAL validate_password_length=6;
#  SET GLOBAL validate_password_policy=LOW;
#  set password for root@localhost=password('xxx');
#  CREATE USER study@localhost IDENTIFIED BY 'xxx';
#  GRANT ALL PRIVILEGES ON study .* TO study@localhost IDENTIFIED BY 'xxx';
#  CREATE DATABASE study CHARACTER SET utf8mb4;

# タイムゾーン設定
- name: timezoneが「Asia/Tokyo」となっていること
  timezone:
    name: Asia/Tokyo

# CentOS7の場合はzip unzipをインストールしないとcomposer installが失敗する
- name: zipとunzipがインストールされていること
  yum:
    name:
      - zip
      - unzip
    state: present

# コンポーザー
# TODO:warningの解消（URL指定のせい？現状インストールは成功するので後回し）
- name: composerがインストールされていること
  shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin && mv /usr/bin/composer.phar /usr/bin/composer
    creates=/usr/bin/composer

- include: local.yml
  when: not is_production

- include: production.yml
  when: is_production

# 環境構築後の作業
# MySQLユーザ設定
# composer update
# ssh接続設定（TODO：template用意してansibleで自動化）
#  touch ~/.ssh/config
#  sudo vi ~/.ssh/config
#  chmod 600 ~/.ssh/config
